/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.40
 * Generated at: 2025-05-06 19:10:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import controller.jsp.mvc.UserModel;

public final class Update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("controller.jsp.mvc.UserModel");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Update User</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-SgOJa3DmI69IUzQ2PVdRZhwQ+dy64/BUtbMJw1MZ8t5HZApcHrRKUc4W0kG879m7\"\r\n");
      out.write(" crossorigin=\"anonymous\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	UserModel user=(UserModel) session.getAttribute("updateUser");

      out.write("\r\n");
      out.write("    <div class=\"container mt-5\">\r\n");
      out.write("        <div class=\"card\">\r\n");
      out.write("            <div class=\"card-header\">\r\n");
      out.write("            <form action=\"Controller\" method=\"post\">\r\n");
      out.write("            	<input type=\"hidden\" name=\"action\" value=\"view\" readonly/>\r\n");
      out.write("            	<button class=\"bi bi-arrow-left btn btn-warning\" type=\"submit\">go back</button>\r\n");
      out.write("            </form>\r\n");
      out.write("                <h1 class=\"text-center\">\r\n");
      out.write("                    Update Details of ID : ");
      out.print(user.getId());
      out.write(" here\r\n");
      out.write("                </h1>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"d-flex align-items-center justify-content-center\">\r\n");
      out.write("                ");

    String fileLocation = user.getFileLocation();
    if (fileLocation != null) {
        if (fileLocation.endsWith(".jpeg")  || fileLocation.endsWith(".txt") || fileLocation.endsWith(".jpg") || fileLocation.endsWith(".png")) {

      out.write("\r\n");
      out.write("            <img style=\"width: 300px; border: 5px solid black; border-radius: 10px;\" src=\"./Files/");
      out.print(fileLocation);
      out.write("\">\r\n");
      out.write("            \r\n");
      out.write("            \r\n");

        } else if (fileLocation.endsWith(".pdf")) {

      out.write("\r\n");
      out.write("            <img style=\"width: 300px;\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/PDF_file_icon.svg/1200px-PDF_file_icon.svg.png\">\r\n");

        } else {

      out.write("\r\n");
      out.write("            <img src=\"https://cdn-icons-png.flaticon.com/512/6747/6747196.png\" style=\"width: 300px;\" />\r\n");

        }
    } else {

      out.write("\r\n");
      out.write("        <img src=\"https://cdn-icons-png.flaticon.com/512/6747/6747196.png\" style=\"width: 300px;\" />\r\n");

    }

      out.write("\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"Controller\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("                <div class=\"card-body\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"userId\" value=\"");
      out.print(user.getId());
      out.write("\" readonly />\r\n");
      out.write("                    <input class=\"form-control mb-1\" type=\"text\" name=\"userName\"\r\n");
      out.write("                           value=\"");
      out.print(user.getUserName());
      out.write("\"  />\r\n");
      out.write("                    <input class=\"form-control mb-1\" type=\"email\" name=\"userEmail\"\r\n");
      out.write("                           value=\"");
      out.print(user.getUserEmail());
      out.write("\"  />\r\n");
      out.write("                    <input class=\"form-control mb-1\" type=\"number\" name=\"userAge\"\r\n");
      out.write("                           value=\"");
      out.print(user.getUserAge());
      out.write("\" />\r\n");
      out.write("                    <input class=\"form-control mb-1\" type=\"file\" name=\"userFile\" />\r\n");
      out.write("                    <input type=\"hidden\" name=\"action\" value=\"update\" /> \r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-footer text-center\">\r\n");
      out.write("                    <button class=\"btn btn-success\" type=\"submit\">Update</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("            integrity=\"sha384-VvpcrYf0tY3LHBO6NWmXc5s9fDVZLEsAaA5NDzOxhy96kcIdsLk1eN7N6j1eHz\"\r\n");
      out.write("            crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
